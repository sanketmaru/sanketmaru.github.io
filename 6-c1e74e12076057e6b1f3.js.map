{"version":3,"sources":["webpack:///./node_modules/@narative/gatsby-theme-novela/src/components/Navigation/Navigation.Paginator.tsx","webpack:///./node_modules/@narative/gatsby-theme-novela/src/components/Bio/Bio.tsx","webpack:///./node_modules/@narative/gatsby-theme-novela/src/sections/articles/Articles.Grid.Context.tsx","webpack:///./node_modules/@narative/gatsby-theme-novela/src/sections/articles/Articles.Hero.tsx","webpack:///./node_modules/@narative/gatsby-theme-novela/src/sections/articles/Articles.Grid.Tiles.tsx","webpack:///./node_modules/@narative/gatsby-theme-novela/src/sections/articles/Articles.Grid.Rows.tsx","webpack:///./node_modules/@narative/gatsby-theme-novela/src/sections/articles/Articles.Grid.tsx","webpack:///./node_modules/@narative/gatsby-theme-novela/src/templates/articles.template.tsx"],"names":["Paginator","maxPages","count","props","pageCount","current","index","pageRoot","pathPrefix","getFullPath","n","render","this","previousPath","nextPath","hasNext","hasPrevious","Helmet","rel","href","Frame","PageButton","to","getPageLinks","MobileReference","aria-hidden","previousPage","pagesRange","range","truncatedRange","slice","unshift","splice","length","push","Set","map","page","i","Spacer","key","PageNumberBUtton","style","opacity","className","Component","paginationItemMixin","p","css","theme","colors","primary","mediaqueries","desktop_up","Link","tablet","ArticlesHero","author","edges","node","BioContainer","BioAvatar","BioAvatarInner","Image","src","avatar","image","fluid","BioText","bio","grey","GridLayoutContext","createContext","gridLayout","hasSetGridLayout","setGridLayout","tile","getGridLayout","GridLayoutProvider","children","initialLayout","articles","useState","setHasSetGridLayout","getGridLayoutAndSave","localStorage","getItem","useEffect","Provider","value","setItem","useContext","hero","site","siteMetadata","tilesIsActive","Section","relative","id","HeadingContainer","maxWidth","HeroHeading","heading","SubheadingContainer","Bio","GridControlsContainer","GridButton","onClick","active","data-a11y","title","aria-label","Tiles","Rows","desktop","phablet","hover","accent","ArticlesGridTiles","Grid","article","narrow","reverse","GridItem","hasOverflow","imageSource","regular","ArticleLink","slug","Item","ImageContainer","Title","dark","Excerpt","excerpt","MetaData","date","timeToRead","limitToTwoLines","wide","desktop_medium","card","Headings","h2","fonts","serif","ArticlesGridRows","GridRow","ArticlesGrid","ArticlesGridContainer","ArticlesPage","location","pageContext","group","Layout","SEO","pathname","ArticlesGradient","gradient"],"mappings":"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","file":"6-c1e74e12076057e6b1f3.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\n\nimport mediaqueries from \"@styles/media\";\nimport { range } from \"@utils\";\n\nimport { IPaginator } from \"@typings\";\n\n/**\n * <Paginator />\n *\n * 1 2 3 ... final page NEXT\n * Component to navigate between different pages on a series of blog post, for example.\n *\n * We're using a <nav> element here so make sure to put the pagination component\n * INSIDE of a section to make sure the markup stays contextually relevant\n *\n * Receives the gatsby-paginator props\n */\n\nclass Paginator extends Component<IPaginator, {}> {\n  maxPages = 3;\n  count = this.props.pageCount;\n  current = this.props.index;\n  pageRoot = this.props.pathPrefix;\n\n  get nextPath() {\n    return this.getFullPath(this.current + 1);\n  }\n\n  get previousPath() {\n    return this.getFullPath(this.current - 1);\n  }\n\n  /**\n   * Utility function to return a 1 ... 5 6 7 ... 10 style pagination\n   */\n  get getPageLinks() {\n    const current = this.current;\n    const count = this.count;\n    const maxPages = this.maxPages;\n\n    // Current is the page we're on\n    // We want to show current - 1, current, current + 1\n    // Of course if we're on page 1, we don't want a page 0\n    const previousPage = current === 1 ? current : current - 1;\n\n    // Now create a range of numbers from the previousPage to the total pages (count)\n    const pagesRange = range(previousPage, count + 1 - previousPage);\n\n    // We might need to truncate that pagesRange if it's\n    // more than the max pages we wish to display (3)\n    const truncatedRange: Array<number | null> = pagesRange.slice(0, maxPages);\n\n    // Throughout this function we might add a null to our pages range.\n    // When it comes to rendering our range if we find a null we'll add a spacer.\n\n    // We might need a spacer at the start of the pagination e.g. 1 ... 3 4 5 etc.\n    // If we're after the second page, we need a ... spacer (3 and up)\n    if (pagesRange[0] > 2) {\n      truncatedRange.unshift(null);\n    }\n    // If we're after the first page, we need page 1 to appear (2 and up)\n    if (pagesRange[0] > 1) {\n      truncatedRange.unshift(1);\n    }\n\n    // If we're on the final page, then there won't be a \"next\" page and\n    // the pagination will end up looking a bit short (e.g. on 8 pages ... 7, 8)\n    // Push to the end an extra page maxPages from the end\n    if (pagesRange[0] + 1 === count && pagesRange[0] - 1 > 0) {\n      truncatedRange.splice(\n        pagesRange.length - 1 - maxPages,\n        0,\n        pagesRange[0] - 1,\n      );\n    }\n\n    // We might need a spacer at the end of the pagination e.g. 4 5 6 ... 8\n    // If we're before the penultimate page, we need a ... spacer\n    if (pagesRange[0] + maxPages < count) {\n      truncatedRange.push(null);\n    }\n\n    // If we're before the last page, we need page <last> to appear\n    if (pagesRange[0] + maxPages - 1 < count) {\n      truncatedRange.push(count);\n    }\n\n    return [...new Set(truncatedRange)].map((page: number | null, i) =>\n      page === null ? (\n        // If you find a null in the truncated array then add a spacer\n        <Spacer key={`PaginatorPage_spacer_${i}`} aria-hidden={true} />\n      ) : (\n        // Otherwise render a PageButton\n        <PageNumberBUtton\n          key={`PaginatorPage_${page}`}\n          to={this.getFullPath(page)}\n          style={{ opacity: current === page ? 1 : 0.3 }}\n          className=\"Paginator__pageLink\"\n        >\n          {page}\n        </PageNumberBUtton>\n      ),\n    );\n  }\n\n  /**\n   * Utility to turn an index in to a page path.\n   * All it really does is glue the page path to the front,\n   * but note there's special behaviour for page 1 where the URL should be / not /page/1\n   */\n  getFullPath = (n: number) => {\n    if (this.pageRoot === \"/\") {\n      return n === 1 ? this.pageRoot : this.pageRoot + \"page/\" + n;\n    } else {\n      return n === 1 ? this.pageRoot : this.pageRoot + \"/page/\" + n;\n    }\n  };\n\n  render() {\n    const count = this.count;\n    const current = this.current;\n\n    if (count <= 1) return null;\n\n    const previousPath = this.previousPath;\n    const nextPath = this.nextPath;\n    const hasNext = this.current < this.count;\n    const hasPrevious = this.current > 1;\n\n    return (\n      <>\n        <Helmet>\n          {hasPrevious && <link rel=\"prev\" href={previousPath} />}\n          {hasNext && <link rel=\"next\" href={nextPath} />}\n        </Helmet>\n        <Frame>\n          {hasPrevious && <PageButton to={previousPath}>Prev</PageButton>}\n          {this.getPageLinks}\n          <MobileReference aria-hidden=\"true\">\n            <em>{current}</em>&nbsp;of {count}\n          </MobileReference>\n          {hasNext && <PageButton to={nextPath}>Next</PageButton>}\n        </Frame>\n      </>\n    );\n  }\n}\n\nexport default Paginator;\n\nconst paginationItemMixin = p => css`\n  line-height: 1;\n  color: ${p.theme.colors.primary};\n  padding: 0;\n  width: 6.8rem;\n  height: 6.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-variant-numeric: tabular-nums;\n\n  ${mediaqueries.desktop_up`\n    display: block;\n    width: auto;\n    height: auto;\n    padding: 2rem;\n\n    &:first-of-type {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n    }\n  `}\n`;\n\nconst PageButton = styled(Link)`\n  font-weight: 600;\n  font-size: 18px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.primary};\n  ${paginationItemMixin}\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    text-decoration: underline;\n  }\n`;\n\nconst PageNumberBUtton = styled(Link)`\n  font-weight: 400;\n  font-size: 18px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.primary};\n  ${paginationItemMixin}\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    text-decoration: underline;\n  }\n`;\n\nconst Spacer = styled.span`\n  opacity: 0.3;\n  ${paginationItemMixin}\n  &::before {\n    content: \"...\";\n  }\n`;\n\nconst MobileReference = styled.span`\n  font-weight: 400;\n  ${paginationItemMixin}\n  color: ${p => p.theme.colors.primary};\n\n  em {\n    font-style: normal;\n    color: ${p => p.theme.colors.primary};\n  }\n`;\n\nconst Frame = styled.nav`\n  position: relative;\n  z-index: 1;\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n\n  ${mediaqueries.tablet`\n    .Paginator__pageLink, ${Spacer} { display: none; }\n    left: -15px;\n  `}\n\n  ${mediaqueries.desktop_up`\n    justify-content: flex-start;\n    ${MobileReference} { display: none; }\n  `}\n`;\n","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport styled from \"@emotion/styled\";\n\nimport Image from \"@components/Image\";\n\nimport mediaqueries from \"@styles/media\";\n\nconst authorQuery = graphql`\n  {\n    author: allAuthorsYaml(filter: { featured: { eq: true } }) {\n      edges {\n        node {\n          bio\n          id\n          name\n          avatar {\n            image: childImageSharp {\n              fluid(maxWidth: 100, quality: 100) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction ArticlesHero() {\n  const results = useStaticQuery(authorQuery);\n  const author = results.author.edges[0].node;\n\n  return (\n    <BioContainer>\n      <BioAvatar>\n        <BioAvatarInner>\n          <Image src={author.avatar.image.fluid} />\n        </BioAvatarInner>\n      </BioAvatar>\n      <BioText>{author.bio}</BioText>\n    </BioContainer>\n  );\n}\n\nexport default ArticlesHero;\n\nconst BioContainer = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  left: -10px;\n`;\n\nconst BioAvatar = styled.div`\n  position: relative;\n  height: 40px;\n  width: 40px;\n  border-radius: 50%;\n  background: rgba(0, 0, 0, 0.25);\n  margin-right: 16px;\n  margin: 10px 26px 10px 10px;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    left: -5px;\n    top: -5px;\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    border: 1px solid rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst BioAvatarInner = styled.div`\n  height: 40px;\n  width: 40px;\n  border-radius: 50%;\n  background: rgba(0, 0, 0, 0.25);\n  margin-right: 16px;\n  overflow: hidden;\n`;\n\nconst BioText = styled.p`\n  max-width: 430px;\n  font-size: 14px;\n  line-height: 1.45;\n  color: ${p => p.theme.colors.grey};\n`;\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { IArticle } from \"@typings\";\n\ninterface GridLayoutProviderProps {\n  children: React.ReactChild;\n  articles: IArticle[];\n}\n\nexport const GridLayoutContext = createContext({\n  gridLayout: \"tiles\",\n  hasSetGridLayout: false,\n  setGridLayout: (tile: string) => {},\n  getGridLayout: () => {},\n});\n\nfunction GridLayoutProvider({ children, articles }: GridLayoutProviderProps) {\n  const initialLayout = articles.length === 1 ? \"rows\" : \"tiles\";\n\n  const [gridLayout, setGridLayout] = useState<string>(initialLayout);\n  const [hasSetGridLayout, setHasSetGridLayout] = useState<boolean>(false);\n\n  function setGridLayoutAndSave(tile: string) {\n    localStorage.setItem(\"gridLayout\", tile || initialLayout);\n    setGridLayout(tile);\n  }\n\n  function getGridLayoutAndSave() {\n    setGridLayout(localStorage.getItem(\"gridLayout\") || initialLayout);\n    setHasSetGridLayout(true);\n  }\n\n  useEffect(() => getGridLayoutAndSave(), []);\n\n  return (\n    <GridLayoutContext.Provider\n      value={{\n        gridLayout,\n        hasSetGridLayout,\n        setGridLayout: setGridLayoutAndSave,\n        getGridLayout: getGridLayoutAndSave,\n      }}\n    >\n      {children}\n    </GridLayoutContext.Provider>\n  );\n}\n\nexport default GridLayoutProvider;\n","import React, { useContext, useEffect } from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport styled from \"@emotion/styled\";\n\nimport Section from \"@components/Section\";\nimport Bio from \"@components/Bio\";\nimport Icons from \"@icons\";\nimport mediaqueries from \"@styles/media\";\n\nimport { GridLayoutContext } from \"./Articles.Grid.Context\";\n\nconst authorQuery = graphql`\n  {\n    site: allSite {\n      edges {\n        node {\n          siteMetadata {\n            hero {\n              heading\n              maxWidth\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction ArticlesHero() {\n  const {\n    gridLayout = \"tiles\",\n    hasSetGridLayout,\n    setGridLayout,\n    getGridLayout,\n  } = useContext(GridLayoutContext);\n\n  useEffect(() => getGridLayout(), []);\n\n  const results = useStaticQuery(authorQuery);\n  const hero = results.site.edges[0].node.siteMetadata.hero;\n  const tilesIsActive = hasSetGridLayout && gridLayout === \"tiles\";\n\n  return (\n    <Section relative id=\"Articles__Hero\">\n      <HeadingContainer style={{ maxWidth: `${hero.maxWidth}px` }}>\n        <HeroHeading>{hero.heading}</HeroHeading>\n      </HeadingContainer>\n      <SubheadingContainer>\n        <Bio />\n        <GridControlsContainer>\n          <GridButton\n            onClick={() => setGridLayout(\"tiles\")}\n            active={tilesIsActive}\n            data-a11y=\"false\"\n            title=\"Show articles in Tile grid\"\n            aria-label=\"Show articles in Tile grid\"\n          >\n            <Icons.Tiles />\n          </GridButton>\n          <GridButton\n            onClick={() => setGridLayout(\"rows\")}\n            active={!tilesIsActive}\n            data-a11y=\"false\"\n            title=\"Show articles in Row grid\"\n            aria-label=\"Show articles in Row grid\"\n          >\n            <Icons.Rows />\n          </GridButton>\n        </GridControlsContainer>\n      </SubheadingContainer>\n    </Section>\n  );\n}\n\nexport default ArticlesHero;\n\nconst SubheadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 100px;\n\n  ${mediaqueries.desktop`\n    margin-bottom: 80px;\n  `};\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `};\n\n  ${mediaqueries.phablet`\n    display: none;\n  `};\n`;\n\nconst GridControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${mediaqueries.tablet`\n    display: none;\n  `};\n`;\n\nconst HeadingContainer = styled.div`\n  margin: 100px 0;\n\n  ${mediaqueries.desktop`\n    width: 80%;\n  `}\n\n  ${mediaqueries.tablet`\n    width: 100%;\n  `}\n`;\n\nconst HeroHeading = styled.h1`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 52px;\n  line-height: 1.15;\n  color: ${p => p.theme.colors.primary};\n\n  ${mediaqueries.desktop`\n    font-size: 38px\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 32px;\n  `}\n`;\n\nconst GridButton = styled.button<{ active: boolean }>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 36px;\n  width: 36px;\n  border-radius: 50%;\n  background: transparent;\n  transition: background 0.25s;\n\n  &:not(:last-child) {\n    margin-right: 30px;\n  }\n\n  &:hover {\n    background: ${p => p.theme.colors.hover};\n  }\n\n  &[data-a11y=\"true\"]:focus::after {\n    content: \"\";\n    position: absolute;\n    left: -10%;\n    top: -10%;\n    width: 120%;\n    height: 120%;\n    border: 2px solid ${p => p.theme.colors.accent};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 50%;\n  }\n\n  svg {\n    opacity: ${p => (p.active ? 1 : 0.25)};\n    transition: opacity 0.2s;\n\n    path {\n      fill: ${p => p.theme.colors.primary};\n    }\n  }\n`;\n\nconst TilesIcon = () => (\n  <svg\n    width=\"26\"\n    height=\"26\"\n    viewBox=\"0 0 26 26\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M4.33337 13.8424H12.0371V5.4165H4.33337V13.8424ZM4.33337 20.5832H12.0371V15.5276H4.33337V20.5832ZM13.963 20.5832H21.6667V12.1572H13.963V20.5832ZM13.963 5.4165V10.4721H21.6667V5.4165H13.963Z\" />\n  </svg>\n);\n\nconst RowsIcon = () => (\n  <svg\n    width=\"26\"\n    height=\"26\"\n    viewBox=\"0 0 26 26\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M4.33331 15.1665H8.41174V10.8332H4.33331V15.1665ZM4.33331 20.5832H8.41174V16.2498H4.33331V20.5832ZM4.33331 9.74984H8.41174V5.4165H4.33331V9.74984ZM9.43135 15.1665H21.6666V10.8332H9.43135V15.1665ZM9.43135 20.5832H21.6666V16.2498H9.43135V20.5832ZM9.43135 5.4165V9.74984H21.6666V5.4165H9.43135Z\" />\n  </svg>\n);\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\n\nimport { Link } from \"gatsby\";\n\nimport Headings from \"@components/Headings\";\nimport Image from \"@components/Image\";\n\nimport mediaqueries from \"@styles/media\";\n\nimport { IArticle } from \"@typings\";\n\n/**\n *  [LONG], [SHORT]\n *  [SHORT], [LONG]\n *  [SHORT], [LONG]\n */\n\n/**\n * Okay, I know, the Grid is manually setup and we're manually selecting an\n * index from the array of articles... but it's only 8 and it works perfectly fine.\n *\n * TODO: Figure out CSS grid for reverse grid row items and inserting a quote inside.\n */\nfunction ArticlesGridTiles({ articles }: { articles: IArticle[] }) {\n  if (!articles) return null;\n\n  return (\n    <>\n      <Grid>\n        <GridItem article={articles[0]} />\n        <GridItem article={articles[1]} narrow />\n      </Grid>\n\n      {articles[2] && (\n        <Grid reverse>\n          <GridItem article={articles[2]} narrow />\n          <GridItem article={articles[3]} />\n        </Grid>\n      )}\n\n      {articles[4] && (\n        <Grid>\n          <GridItem article={articles[4]} />\n          <GridItem article={articles[5]} narrow />\n        </Grid>\n      )}\n\n      {articles[6] && (\n        <Grid>\n          <GridItem article={articles[6]} narrow />\n          <GridItem article={articles[7]} />\n        </Grid>\n      )}\n    </>\n  );\n}\n\nexport default ArticlesGridTiles;\n\nconst GridItem = ({ article, narrow }) => {\n  if (!article) return null;\n  article = article.node;\n\n  const hasOverflow = narrow && article.title.length > 35;\n  const imageSource = narrow\n    ? article.hero.narrow.fluid\n    : article.hero.regular.fluid;\n\n  return (\n    <ArticleLink to={article.slug} data-a11y=\"false\">\n      <Item>\n        <ImageContainer narrow={narrow}>\n          <Image src={imageSource} />\n        </ImageContainer>\n        <Title dark hasOverflow={hasOverflow}>\n          {article.title}\n        </Title>\n        <Excerpt narrow={narrow} hasOverflow={hasOverflow}>\n          {article.excerpt}\n        </Excerpt>\n        <MetaData>\n          {article.date} · {article.timeToRead} min read\n        </MetaData>\n      </Item>\n    </ArticleLink>\n  );\n};\n\nconst wide = \"1fr\";\nconst narrow = \"457px\";\nconst limitToTwoLines = css`\n  text-overflow: ellipsis;\n  overflow-wrap: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  display: -webkit-box;\n  white-space: normal;\n  overflow: hidden;\n\n  ${mediaqueries.phablet`\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst Grid = styled.div<{ reverse: boolean }>`\n  position: relative;\n  display: grid;\n  grid-template-columns: ${p =>\n    p.reverse ? `${narrow} ${wide}` : `${wide} ${narrow}`};\n  grid-template-rows: 2;\n  column-gap: 30px;\n  margin-bottom: 80px;\n\n  ${mediaqueries.desktop_medium`\n    grid-template-columns: 1fr 1fr;\n  `}\n\n  ${mediaqueries.tablet`\n    grid-template-columns: 1fr;\n    margin-bottom: 0;\n  `}\n`;\n\nconst ImageContainer = styled.div<{ narrow: boolean }>`\n  position: relative;\n  height: 280px;\n  box-shadow: 0 30px 60px -10px rgba(0, 0, 0, ${p => (p.narrow ? 0.22 : 0.3)}),\n    0 18px 36px -18px rgba(0, 0, 0, ${p => (p.narrow ? 0.25 : 0.33)});\n  margin-bottom: 30px;\n  transition: transform 0.3s var(--ease-out-quad),\n    box-shadow 0.3s var(--ease-out-quad);\n\n  & > div {\n    height: 100%;\n  }\n\n  ${mediaqueries.tablet`\n    height: 200px;\n    margin-bottom: 35px;\n  `}\n\n  ${mediaqueries.phablet`\n    overflow: hidden;\n    margin-bottom: 0;\n    box-shadow: none;\n    border-top-right-radius: 5px;\n    border-top-left-radius: 5px;\n  `}\n`;\n\nconst Item = styled.div`\n  position: relative;\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `}\n\n  @media (max-width: 540px) {\n    background: ${p => p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\n    margin-bottom: 40px;\n    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n  `}\n`;\n\nconst Title = styled(Headings.h2)`\n  font-size: 21px;\n  font-family: ${p => p.theme.fonts.serif};\n  margin-bottom: ${p => (p.hasOverflow ? \"45px\" : \"10px\")};\n  transition: color 0.3s ease-in-out;\n  ${limitToTwoLines};\n\n  ${mediaqueries.tablet`\n    font-size: 24px;  \n    margin-bottom: 15px;\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 22px;  \n    padding: 30px 20px 0;\n    margin-bottom: 10px;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst Excerpt = styled.p`\n  ${limitToTwoLines};\n  font-size: 16px;\n  margin-bottom: 10px;\n  color: ${p => p.theme.colors.grey};\n  display: ${p => (p.hasOverflow ? \"none\" : \"box\")};\n  max-width: ${p => (p.narrow ? \"415px\" : \"515px\")};\n\n  ${mediaqueries.desktop`\n    display: -webkit-box;\n  `}\n\n  ${mediaqueries.phablet`\n    margin-bottom; 15px;\n  `}\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    padding:  0 20px;\n    margin-bottom: 20px;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst MetaData = styled.div`\n  font-weight: 600;\n  font-size: 16px;\n  color: ${p => p.theme.colors.grey};\n  opacity: 0.33;\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    padding:  0 20px 30px;\n  `}\n`;\n\nconst ArticleLink = styled(Link)`\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  border-radius: 5px;\n  z-index: 1;\n  transition: transform 0.33s var(--ease-out-quart);\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n\n  &:hover ${ImageContainer}, &:focus ${ImageContainer} {\n    transform: translateY(-1px);\n    box-shadow: 0 50px 80px -20px rgba(0, 0, 0, 0.27),\n      0 30px 50px -30px rgba(0, 0, 0, 0.3);\n  }\n\n  &:hover h2,\n  &:focus h2 {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  &[data-a11y=\"true\"]:focus::after {\n    content: \"\";\n    position: absolute;\n    left: -1.5%;\n    top: -2%;\n    width: 103%;\n    height: 104%;\n    border: 3px solid ${p => p.theme.colors.accent};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 5px;\n  }\n\n  ${mediaqueries.phablet`\n    &:hover ${ImageContainer} {\n      transform: none;\n      box-shadow: initial;\n    }\n\n    &:active {\n      transform: scale(0.97) translateY(3px);\n    }\n  `}\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\n\nimport Headings from \"@components/Headings\";\nimport Image from \"@components/Image\";\n\nimport mediaqueries from \"@styles/media\";\n\nimport { IArticle } from \"@typings\";\n\n/**\n * [LONG ROW]\n * [LONG ROW]\n * [LONG ROW]\n * ...\n */\n\nfunction ArticlesGridRows({ articles }: { articles: IArticle[] }) {\n  if (!articles) return null;\n\n  return (\n    <>\n      {articles.map(({ node: article }) => (\n        <ArticleLink key={article.title} to={article.slug} data-a11y=\"false\">\n          <GridRow>\n            <ImageContainer>\n              <Image src={article.hero.regular.fluid} />\n            </ImageContainer>\n            <div>\n              <Title dark>{article.title}</Title>\n              <Excerpt>{article.excerpt}</Excerpt>\n              <MetaData>\n                {article.date} · {article.timeToRead} min readshowBackArrow\n              </MetaData>\n            </div>\n          </GridRow>\n        </ArticleLink>\n      ))}\n    </>\n  );\n}\n\nexport default ArticlesGridRows;\n\nconst limitToTwoLines = css`\n  text-overflow: ellipsis;\n  overflow-wrap: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  display: -webkit-box;\n  white-space: normal;\n  overflow: hidden;\n\n  ${mediaqueries.phablet`\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  height: 220px;\n  box-shadow: 0 30px 60px -10px rgba(0, 0, 0, 0.2),\n    0 18px 36px -18px rgba(0, 0, 0, 0.22);\n  transition: transform 0.3s var(--ease-out-quad),\n    box-shadow 0.3s var(--ease-out-quad);\n\n  & > div {\n    height: 100%;\n  }\n\n  ${mediaqueries.tablet`\n    height: 200px;\n    margin-bottom: 35px;\n  `}\n\n  ${mediaqueries.phablet`\n    margin-bottom: 0;\n    box-shadow: none;\n    overflow: hidden;\n    border-top-right-radius: 5px;\n    border-top-left-radius: 5px;\n  `}\n`;\n\nconst GridRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 488px;\n  grid-column-gap: 96px;\n  grid-template-rows: 1;\n  align-items: center;\n  position: relative;\n\n  ${mediaqueries.desktop_medium`\n    grid-column-gap: 40px;\n    grid-template-columns: 1fr 420px;\n  `}\n\n  ${mediaqueries.desktop`\n    grid-column-gap: 24px;\n    grid-template-columns: 1fr 380px;\n  `}\n\n  ${mediaqueries.tablet`\n    grid-template-columns: 1fr;\n  `}\n\n  @media (max-width: 540px) {\n    background: ${p => p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\n    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n  `}\n`;\n\nconst Title = styled(Headings.h2)`\n  font-size: 24px;\n  margin-bottom: 15px;\n  transition: color 0.3s ease-in-out;\n  ${limitToTwoLines};\n\n  ${mediaqueries.phablet`\n    padding: 30px 20px 0;\n    margin-bottom: 10px;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst Excerpt = styled.p`\n  ${limitToTwoLines};\n  font-size: 16px;\n  margin-bottom: 15px;\n  color: ${p => p.theme.colors.grey};\n  display: box;\n\n  ${mediaqueries.desktop`\n    display: -webkit-box;\n  `}\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    padding:  0 20px;\n    margin-bottom: 20px;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst MetaData = styled.div`\n  font-weight: 600;\n  font-size: 16px;\n  color: ${p => p.theme.colors.grey};\n  opacity: 0.33;\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    padding:  0 20px 30px;\n  `}\n`;\n\nconst ArticleLink = styled(Link)`\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  margin-bottom: 50px;\n  transition: transform 0.33s var(--ease-out-quart);\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n\n  &:hover ${ImageContainer}, &:focus ${ImageContainer} {\n    transform: translateY(-1px);\n    box-shadow: 0 50px 80px -20px rgba(0, 0, 0, 0.27),\n      0 30px 50px -30px rgba(0, 0, 0, 0.3);\n  }\n\n  &:hover h2,\n  &:focus h2 {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  &[data-a11y=\"true\"]:focus::after {\n    content: \"\";\n    position: absolute;\n    left: -1.5%;\n    top: -10%;\n    width: 103%;\n    height: 120%;\n    border: 3px solid ${p => p.theme.colors.accent};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 5px;\n  }\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `}\n\n  ${mediaqueries.phablet`\n    margin-bottom: 40px;\n    \n    &:hover ${ImageContainer} {\n      transform: none;\n      box-shadow: initial;\n    }\n\n    &:active {\n      transform: scale(0.97) translateY(3px);\n    }\n  `}\n`;\n","import React, { useContext } from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport { IArticle } from \"@typings\";\n\nimport ArticlesGridTiles from \"./Articles.Grid.Tiles\";\nimport ArticlesGridRows from \"./Articles.Grid.Rows\";\n\nimport { GridLayoutContext } from \"./Articles.Grid.Context\";\n\nfunction ArticlesGrid({ articles }: { articles: IArticle[] }) {\n  const { gridLayout, hasSetGridLayout } = useContext(GridLayoutContext);\n  /**\n   * We have to wait until we read from localStorage to see which layout\n   * the user has chosen. Since Gatsby is HTML that's visible before JS is\n   * loaded with have to hide the Grid until JS has loaded and we'r set the memory.\n   */\n  return (\n    <ArticlesGridContainer\n      style={{ opacity: hasSetGridLayout ? 1 : 0 }}\n      id=\"Articles__Grid\"\n    >\n      {gridLayout === \"tiles\" ? (\n        <ArticlesGridTiles articles={articles} />\n      ) : (\n        <ArticlesGridRows articles={articles} />\n      )}\n    </ArticlesGridContainer>\n  );\n}\n\nexport default ArticlesGrid;\n\nconst ArticlesGridContainer = styled.div`\n  transition: opacity 0.25s;\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Section from \"@components/Section\";\nimport SEO from \"@components/SEO\";\nimport Layout from \"@components/Layout\";\nimport Paginator from \"@components/Navigation/Navigation.Paginator\";\n\nimport ArticlesHero from \"../sections/articles/Articles.Hero\";\nimport ArticlesGridLayoutProvider from \"../sections/articles/Articles.Grid.Context\";\nimport ArticlesGrid from \"../sections/articles/Articles.Grid\";\n\nfunction ArticlesPage({ location, pageContext }) {\n  const articles = pageContext.group;\n\n  return (\n    <ArticlesGridLayoutProvider articles={articles}>\n      <Layout>\n        <SEO pathname={location.pathname} />\n        <ArticlesHero />\n        <Section narrow>\n          <ArticlesGrid articles={articles} />\n          <Paginator {...pageContext} />\n        </Section>\n        <ArticlesGradient />\n      </Layout>\n    </ArticlesGridLayoutProvider>\n  );\n}\n\nexport default ArticlesPage;\n\nconst ArticlesGradient = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 590px;\n  z-index: 0;\n  pointer-events: none;\n  background: ${p => p.theme.colors.gradient};\n  transition: background 0.3s var(--ease-in-out-quad);\n`;\n"],"sourceRoot":""}